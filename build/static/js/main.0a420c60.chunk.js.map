{"version":3,"sources":["component/Template.js","component/TodoItem.js","component/TodoList.js","component/TodoInsert.js","App.js","reportWebVitals.js","index.js"],"names":["Template","children","todoLength","className","TodoItem","todo","onCheckToggle","onInsertToggle","onChangeSelectedTodo","id","text","checked","onClick","TodoList","todos","map","TodoInsert","onInsertTodo","selectedTodo","onRemove","onUpdate","useState","value","setValue","useEffect","onSubmit","e","preventDefault","placeholder","onChange","target","type","nextId","App","setSelectedTodo","insertToggle","setInsertToggle","setTodos","prev","length","alert","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a420c60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Template.css\";\r\n\r\nconst Template = ({children, todoLength}) => {\r\n    return (\r\n        <div className=\"Template\">\r\n            <div className=\"title\">오늘의 할 일 ({todoLength})</div>\r\n            <div>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Template;","import React from \"react\";\r\nimport {MdCheckBox, MdCheckBoxOutlineBlank} from \"react-icons/md\";\r\nimport \"./TodoItem.css\";\r\n\r\nconst TodoItem = ({ todo, onCheckToggle, onInsertToggle, onChangeSelectedTodo }) => {\r\n    const { id, text, checked } = todo;\r\n    return (\r\n        <div className=\"TodoItem\">\r\n            <div className= {`content ${checked ? 'checked' : ''}`}>\r\n                {checked ? (\r\n                <MdCheckBox\r\n                    onClick={() => {\r\n                        onCheckToggle(id);\r\n                    }}\r\n                />\r\n                ) : (\r\n                    <MdCheckBoxOutlineBlank \r\n                    onClick={() => {\r\n                        onCheckToggle(id);\r\n                    }}\r\n                />\r\n                )}\r\n                <div className=\"text\" \r\n                    onClick={() => {\r\n                        onChangeSelectedTodo(todo);\r\n                        onInsertToggle();\r\n                }}\r\n                >\r\n                    {text}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport \"./TodoList.css\";\r\n\r\nconst TodoList = ({ todos, onCheckToggle, onInsertToggle, onChangeSelectedTodo }) => {\r\n    return (\r\n        <div className=\"TodoList\">\r\n            {todos.map(todo => (\r\n                <TodoItem \r\n                    todo={todo} \r\n                    key={todo.id} \r\n                    onCheckToggle={onCheckToggle} \r\n                    onInsertToggle={onInsertToggle}\r\n                    onChangeSelectedTodo={onChangeSelectedTodo}\r\n                    />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\r\nimport { MdAddCircle } from \"react-icons/md\";\r\nimport { TiTrash, TiPencil } from \"react-icons/ti\";\r\nimport \"./TodoInsert.css\";\r\n\r\nconst TodoInsert = ({ \r\n    onInsertToggle, \r\n    onInsertTodo, \r\n    selectedTodo,\r\n    onRemove,\r\n    onUpdate\r\n}) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const onChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        onInsertTodo(value);\r\n        setValue(\"\");\r\n        onInsertToggle();\r\n    };\r\n    useEffect(() => {\r\n        if (selectedTodo) {\r\n            setValue(selectedTodo.text);\r\n        }\r\n    }, [selectedTodo]);\r\n    return (\r\n        <div>\r\n            <div className=\"background\" onClick={onInsertToggle}></div>\r\n            <form onSubmit={\r\n                    selectedTodo \r\n                        ? () => {\r\n                            onUpdate(selectedTodo.id, value);\r\n                            }\r\n                        : onSubmit\r\n                    }\r\n                >\r\n                <input \r\n                    placeholder=\"please type\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                ></input>\r\n                {selectedTodo ? (\r\n                    <div className=\"rewrite\">\r\n                        <TiPencil onClick={() => {\r\n                            onUpdate(selectedTodo.id, value);\r\n                        }}\r\n                    />\r\n                        <TiTrash \r\n                        onClick={() => {\r\n                            onRemove(selectedTodo.id);\r\n                        }}\r\n                    />\r\n                    </div>\r\n                ) : (<button type=\"submit\">\r\n                    <MdAddCircle />\r\n                </button>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoInsert;","import React, { useState } from \"react\";\n// 파일, 설정, 컴포넌트를 외부 파일이나 모듈에서 가져올 때 사용합니다.\n// import * as 이름 from 위치\n// import { default as 이름 } from 위치\nimport './App.css';\nimport Template from './component/Template';\nimport TodoList from './component/TodoList';\nimport { MdAddCircle } from \"react-icons/md\";\nimport TodoInsert from \"./component/TodoInsert\";\n\nlet nextId = 4;\n\nconst App = () => {\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [insertToggle, setInsertToggle] = useState(false);\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: \"할일 1\",\n      checked: true\n    },\n    {\n      id: 2,\n      text: \"할일 2\",\n      checked: true\n    },\n    {\n      id: 3,\n      text: \"할일 3\",\n      checked: true\n    }\n  ]);\n\n  const onInsertToggle = () => {\n    if (selectedTodo) {\n      setSelectedTodo(null);\n    }\n    setInsertToggle(prev => !prev);\n  };\n\n  const onInsertTodo = (text) => {\n    if (text === \"\") { // 만약 텍스트입력에 빈칸이 들어왔을때\n      return alert(\"할 일을 입력해주세요.\"); // 알림창이 뜬다\n    } else { // 다른 경우\n      const todo = {\n        id: nextId, // id가 다른 아이디인지\n        text, // id가 텍스트인지\n        checked: false // 다르면 false\n      };\n      setTodos(todos => todos.concat(todo));\n      nextId++;\n    }\n  };\n\n  const onCheckToggle = (id) => {\n    setTodos(todos =>\n      todos.map(todo =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo\n      )\n    );\n  };\n\n  const onChangeSelectedTodo = todo => {\n    setSelectedTodo(todo);\n  };\n\n  const onRemove = id => {\n    onInsertToggle();\n    setTodos(todos => todos.filter(todo => todo.id !== id))\n  }\n\n  const onUpdate = (id, text) => {\n    onInsertToggle();\n    setTodos(todos =>\n      todos.map(todo => (todo.id === id ? { ...todo, text } : todo))\n    );\n  };\n\n  return (\n    <Template todoLength={todos.length}>\n      <TodoList\n        todos={todos}\n        onCheckToggle={onCheckToggle}\n        onInsertToggle={onInsertToggle}\n        onChangeSelectedTodo={onChangeSelectedTodo}\n      />\n      <div className=\"add-todo-button\" onClick={onInsertToggle}>\n        <MdAddCircle />\n      </div>\n      {insertToggle && (\n        <TodoInsert\n          selectedTodo={selectedTodo}\n          onInsertToggle={onInsertToggle}\n          onInsertTodo={onInsertTodo}\n          onRemove={onRemove}\n          onUpdate={onUpdate}\n        />\n      )}\n    </Template>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}