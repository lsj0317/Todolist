{"ast":null,"code":"import _slicedToArray from\"C:/Users/\\uC774\\uC11C\\uC900/Desktop/Github/Todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{MdAddCircle}from\"react-icons/md\";import{TiTrash,TiPencil}from\"react-icons/ti\";import\"./TodoInsert.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoInsert=function TodoInsert(_ref){var onInsertToggle=_ref.onInsertToggle,onInsertTodo=_ref.onInsertTodo,selectedTodo=_ref.selectedTodo,onRemove=_ref.onRemove,onUpdate=_ref.onUpdate;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var onChange=function onChange(e){setValue(e.target.value);};var onSubmit=function onSubmit(e){e.preventDefault();onInsertTodo(value);setValue(\"\");onInsertToggle();};useEffect(function(){if(selectedTodo){setValue(selectedTodo.text);}},[selectedTodo]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"background\",onClick:onInsertToggle}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:selectedTodo?function(){onUpdate(selectedTodo.id,value);}:onSubmit,children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"please type\",value:value,onChange:onChange}),selectedTodo?/*#__PURE__*/_jsxs(\"div\",{className:\"rewrite\",children:[/*#__PURE__*/_jsx(TiPencil,{onClick:function onClick(){onUpdate(selectedTodo.id,value);}}),/*#__PURE__*/_jsx(TiTrash,{onClick:function onClick(){onRemove(selectedTodo.id);}})]}):/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:/*#__PURE__*/_jsx(MdAddCircle,{})})]})]});};export default TodoInsert;","map":{"version":3,"sources":["C:/Users/이서준/Desktop/Github/Todolist/src/component/TodoInsert.js"],"names":["React","useState","useEffect","MdAddCircle","TiTrash","TiPencil","TodoInsert","onInsertToggle","onInsertTodo","selectedTodo","onRemove","onUpdate","value","setValue","onChange","e","target","onSubmit","preventDefault","text","id"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,gBAAlC,CACA,MAAO,kBAAP,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAMb,IALFC,CAAAA,cAKE,MALFA,cAKE,CAJFC,YAIE,MAJFA,YAIE,CAHFC,YAGE,MAHFA,YAGE,CAFFC,QAEE,MAFFA,QAEE,CADFC,QACE,MADFA,QACE,CACF,cAA0BV,QAAQ,CAAC,EAAD,CAAlC,wCAAOW,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CAClBF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR,CACH,CAFD,CAIA,GAAMK,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACF,CAAD,CAAO,CACpBA,CAAC,CAACG,cAAF,GACAV,YAAY,CAACI,KAAD,CAAZ,CACAC,QAAQ,CAAC,EAAD,CAAR,CACAN,cAAc,GACjB,CALD,CAMAL,SAAS,CAAC,UAAM,CACZ,GAAIO,YAAJ,CAAkB,CACdI,QAAQ,CAACJ,YAAY,CAACU,IAAd,CAAR,CACH,CACJ,CAJQ,CAIN,CAACV,YAAD,CAJM,CAAT,CAKA,mBACI,oCACI,YAAK,SAAS,CAAC,YAAf,CAA4B,OAAO,CAAEF,cAArC,EADJ,cAEI,cAAM,QAAQ,CACNE,YAAY,CACN,UAAM,CACJE,QAAQ,CAACF,YAAY,CAACW,EAAd,CAAkBR,KAAlB,CAAR,CACC,CAHG,CAINK,QALd,wBAQI,cACI,WAAW,CAAC,aADhB,CAEI,KAAK,CAAEL,KAFX,CAGI,QAAQ,CAAEE,QAHd,EARJ,CAaKL,YAAY,cACT,aAAK,SAAS,CAAC,SAAf,wBACI,KAAC,QAAD,EAAU,OAAO,CAAE,kBAAM,CACrBE,QAAQ,CAACF,YAAY,CAACW,EAAd,CAAkBR,KAAlB,CAAR,CACH,CAFD,EADJ,cAKI,KAAC,OAAD,EACA,OAAO,CAAE,kBAAM,CACXF,QAAQ,CAACD,YAAY,CAACW,EAAd,CAAR,CACH,CAHD,EALJ,GADS,cAYR,eAAQ,IAAI,CAAC,QAAb,uBACD,KAAC,WAAD,IADC,EAzBT,GAFJ,GADJ,CAmCH,CA3DD,CA6DA,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { MdAddCircle } from \"react-icons/md\";\r\nimport { TiTrash, TiPencil } from \"react-icons/ti\";\r\nimport \"./TodoInsert.css\";\r\n\r\nconst TodoInsert = ({ \r\n    onInsertToggle, \r\n    onInsertTodo, \r\n    selectedTodo,\r\n    onRemove,\r\n    onUpdate\r\n}) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const onChange = e => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        onInsertTodo(value);\r\n        setValue(\"\");\r\n        onInsertToggle();\r\n    };\r\n    useEffect(() => {\r\n        if (selectedTodo) {\r\n            setValue(selectedTodo.text);\r\n        }\r\n    }, [selectedTodo]);\r\n    return (\r\n        <div>\r\n            <div className=\"background\" onClick={onInsertToggle}></div>\r\n            <form onSubmit={\r\n                    selectedTodo \r\n                        ? () => {\r\n                            onUpdate(selectedTodo.id, value);\r\n                            }\r\n                        : onSubmit\r\n                    }\r\n                >\r\n                <input \r\n                    placeholder=\"please type\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                ></input>\r\n                {selectedTodo ? (\r\n                    <div className=\"rewrite\">\r\n                        <TiPencil onClick={() => {\r\n                            onUpdate(selectedTodo.id, value);\r\n                        }}\r\n                    />\r\n                        <TiTrash \r\n                        onClick={() => {\r\n                            onRemove(selectedTodo.id);\r\n                        }}\r\n                    />\r\n                    </div>\r\n                ) : (<button type=\"submit\">\r\n                    <MdAddCircle />\r\n                </button>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoInsert;"]},"metadata":{},"sourceType":"module"}