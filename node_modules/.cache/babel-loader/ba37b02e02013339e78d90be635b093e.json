{"ast":null,"code":"import _objectSpread from\"C:/Users/\\uC774\\uC11C\\uC900/Desktop/Github/Todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/\\uC774\\uC11C\\uC900/Desktop/Github/Todolist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";// 파일, 설정, 컴포넌트를 외부 파일이나 모듈에서 가져올 때 사용합니다.\n// import * as 이름 from 위치\n// import { default as 이름 } from 위치\nimport'./App.css';import Template from'./component/Template';import TodoList from'./component/TodoList';import{MdAddCircle}from\"react-icons/md\";import TodoInsert from\"./component/TodoInsert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var nextId=4;var App=function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedTodo=_useState2[0],setSelectedTodo=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),insertToggle=_useState4[0],setInsertToggle=_useState4[1];var _useState5=useState([{id:1,text:\"할일 1\",checked:true},{id:2,text:\"할일 2\",checked:true},{id:3,text:\"할일 3\",checked:true}]),_useState6=_slicedToArray(_useState5,2),todos=_useState6[0],setTodos=_useState6[1];var onInsertToggle=function onInsertToggle(){if(selectedTodo){setSelectedTodo(null);}setInsertToggle(function(prev){return!prev;});};var onInsertTodo=function onInsertTodo(text){if(text===\"\"){// 만약 텍스트입력에 빈칸이 들어왔을때\nreturn alert(\"할 일을 입력해주세요.\");// 알림창이 뜬다\n}else{// 다른 경우\nvar todo={id:nextId,// id가 다른 아이디인지\ntext:text,// id가 텍스트인지\nchecked:false// 다르면 false\n};setTodos(function(todos){return todos.concat(todo);});nextId++;}};var onCheckToggle=function onCheckToggle(id){setTodos(function(todos){return todos.map(function(todo){return todo.id===id?_objectSpread(_objectSpread({},todo),{},{checked:!todo.checked}):todo;});});};var onChangeSelectedTodo=function onChangeSelectedTodo(todo){setSelectedTodo(todo);};var onRemove=function onRemove(id){onInsertToggle();setTodos(function(todos){return todos.filter(function(todo){return todo.id!==id;});});};var onUpdate=function onUpdate(id,text){onInsertToggle();setTodos(function(todos){return todos.map(function(todo){return todo.id===id?_objectSpread(_objectSpread({},todo),{},{text:text}):todo;});});};return/*#__PURE__*/_jsxs(Template,{todoLength:todos.length,children:[/*#__PURE__*/_jsx(TodoList,{todos:todos,onCheckToggle:onCheckToggle,onInsertToggle:onInsertToggle,onChangeSelectedTodo:onChangeSelectedTodo}),/*#__PURE__*/_jsx(\"div\",{className:\"add-todo-button\",onClick:onInsertToggle,children:/*#__PURE__*/_jsx(MdAddCircle,{})}),insertToggle&&/*#__PURE__*/_jsx(TodoInsert,{selectedTodo:selectedTodo,onInsertToggle:onInsertToggle,onInsertTodo:onInsertTodo,onRemove:onRemove,onUpdate:onUpdate})]});};export default App;","map":{"version":3,"sources":["C:/Users/이서준/Desktop/Github/Todolist/src/App.js"],"names":["React","useState","Template","TodoList","MdAddCircle","TodoInsert","nextId","App","selectedTodo","setSelectedTodo","insertToggle","setInsertToggle","id","text","checked","todos","setTodos","onInsertToggle","prev","onInsertTodo","alert","todo","concat","onCheckToggle","map","onChangeSelectedTodo","onRemove","filter","onUpdate","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// 파일, 설정, 컴포넌트를 외부 파일이나 모듈에서 가져올 때 사용합니다.\n// import * as 이름 from 위치\n// import { default as 이름 } from 위치\nimport './App.css';\nimport Template from './component/Template';\nimport TodoList from './component/TodoList';\nimport { MdAddCircle } from \"react-icons/md\";\nimport TodoInsert from \"./component/TodoInsert\";\n\nlet nextId = 4;\n\nconst App = () => {\n  const [selectedTodo, setSelectedTodo] = useState(null);\n  const [insertToggle, setInsertToggle] = useState(false);\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      text: \"할일 1\",\n      checked: true\n    },\n    {\n      id: 2,\n      text: \"할일 2\",\n      checked: true\n    },\n    {\n      id: 3,\n      text: \"할일 3\",\n      checked: true\n    }\n  ]);\n\n  const onInsertToggle = () => {\n    if (selectedTodo) {\n      setSelectedTodo(null);\n    }\n    setInsertToggle(prev => !prev);\n  };\n\n  const onInsertTodo = (text) => {\n    if (text === \"\") { // 만약 텍스트입력에 빈칸이 들어왔을때\n      return alert(\"할 일을 입력해주세요.\"); // 알림창이 뜬다\n    } else { // 다른 경우\n      const todo = {\n        id: nextId, // id가 다른 아이디인지\n        text, // id가 텍스트인지\n        checked: false // 다르면 false\n      };\n      setTodos(todos => todos.concat(todo));\n      nextId++;\n    }\n  };\n\n  const onCheckToggle = (id) => {\n    setTodos(todos =>\n      todos.map(todo =>\n        todo.id === id ? { ...todo, checked: !todo.checked } : todo\n      )\n    );\n  };\n\n  const onChangeSelectedTodo = todo => {\n    setSelectedTodo(todo);\n  };\n\n  const onRemove = id => {\n    onInsertToggle();\n    setTodos(todos => todos.filter(todo => todo.id !== id))\n  }\n\n  const onUpdate = (id, text) => {\n    onInsertToggle();\n    setTodos(todos =>\n      todos.map(todo => (todo.id === id ? { ...todo, text } : todo))\n    );\n  };\n\n  return (\n    <Template todoLength={todos.length}>\n      <TodoList\n        todos={todos}\n        onCheckToggle={onCheckToggle}\n        onInsertToggle={onInsertToggle}\n        onChangeSelectedTodo={onChangeSelectedTodo}\n      />\n      <div className=\"add-todo-button\" onClick={onInsertToggle}>\n        <MdAddCircle />\n      </div>\n      {insertToggle && (\n        <TodoInsert\n          selectedTodo={selectedTodo}\n          onInsertToggle={onInsertToggle}\n          onInsertTodo={onInsertTodo}\n          onRemove={onRemove}\n          onUpdate={onUpdate}\n        />\n      )}\n    </Template>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}